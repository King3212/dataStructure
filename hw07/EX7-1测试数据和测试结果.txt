
1.写出用邻接矩阵作为无向带权图的存储结构，分别实现卡鲁斯卡尔和普里姆求最小生成树的程序。

情况1：简单的3x3邻接矩阵
输入：
（1）邻接矩阵的行总数和列总数，以输入 -1  -1  来结束整个程序的运行。
    3 3
（2）邻接矩阵的每行数据（整数）
    0 1 2
    1 0 3
    2 3 0
输出：
    卡鲁斯卡尔求最小生成树的结果序列
    0 - 1 : 1
    0 - 2 : 2
    普里姆求最小生成树的结果序列
    0 - 1 : 1
    0 - 2 : 2
是否符合预期：
    是

情况2：包含负权边的邻接矩阵
输入：
（1）邻接矩阵的行总数和列总数，以输入 -1  -1  来结束整个程序的运行。
    4 4
（2）邻接矩阵的每行数据（整数）
    0 -1 2 -1
    -1 0 -3 4
    2 -3 0 5
    -1 4 5 0
输出：
    卡鲁斯卡尔求最小生成树的结果序列
    1 - 2 : -3
    0 - 3 : -1
    1 - 0 : -1
    普里姆求最小生成树的结果序列
    0 - 1 : -1
    1 - 2 : -3
    0 - 3 : -1
是否符合预期：
    是

情况3：空矩阵
输入：
（1）邻接矩阵的行总数和列总数，以输入 -1  -1  来结束整个程序的运行。
    0 0
（2）邻接矩阵的每行数据（整数）

输出：
    卡鲁斯卡尔求最小生成树的结果序列

    普里姆求最小生成树的结果序列

是否符合预期：
    是


情况4：只有一个节点的图
输入：
（1）邻接矩阵的行总数和列总数，以输入 -1  -1  来结束整个程序的运行。
    1 1
（2）邻接矩阵的每行数据（整数）
    0    
输出：
    卡鲁斯卡尔求最小生成树的结果序列

    普里姆求最小生成树的结果序列

是否符合预期：
    是
    
情况4：非对称矩阵（有向图）
输入：
（1）邻接矩阵的行总数和列总数，以输入 -1  -1  来结束整个程序的运行。
    3 3
（2）邻接矩阵的每行数据（整数）
    0 1 2
    1 0 3
    1 3 0
输出：
    非无向图！（并退出程序）

是否符合预期：
    是