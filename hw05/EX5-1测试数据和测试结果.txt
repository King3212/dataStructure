设计一个程序：实现判断该一棵二叉树是否为二叉查找树。假设二叉树采用二叉链式结构存储。

情况1：空树
输入：
    (1) 输入有多少棵二叉树要进行测试（以-1结束整个程序的运行）
        1
    (2) 输入扩充的二叉树前序遍历序列（整数值序列），0表示空子树
        0
输出：
    建树完成，判断是否为二叉搜索树：
    是二叉搜索树

情况2：仅根节点
输入：
    (1) 输入有多少棵二叉树要进行测试（以-1结束整个程序的运行）
        1
    (2) 输入扩充的二叉树前序遍历序列（整数值序列），0表示空子树
        1 0 0
输出：
    建树完成，判断是否为二叉搜索树：
    是二叉搜索树

情况3：有左节点且左节点不满足BST
输入：
    (1) 输入有多少棵二叉树要进行测试（以-1结束整个程序的运行）
        1
    (2) 输入扩充的二叉树前序遍历序列（整数值序列），0表示空子树
        1 2 0 0 0
输出：
    建树完成，判断是否为二叉搜索树：
    不是二叉搜索树

情况4：有右节点且右节点不满足BST
输入：
    (1) 输入有多少棵二叉树要进行测试（以-1结束整个程序的运行）
        1
    (2) 输入扩充的二叉树前序遍历序列（整数值序列），0表示空子树
        2 0 1 0 0
输出：
    建树完成，判断是否为二叉搜索树：
    不是二叉搜索树

情况5：左右节点均有且是BST
输入：
    (1) 输入有多少棵二叉树要进行测试（以-1结束整个程序的运行）
        1
    (2) 输入扩充的二叉树前序遍历序列（整数值序列），0表示空子树
        2 1 0 0 3 0 0
输出：
    建树完成，判断是否为二叉搜索树：
    是二叉搜索树